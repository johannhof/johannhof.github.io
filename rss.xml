<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>Johann&apos;s Blog</title><link>http://johannh.me</link><description>Things about JS, Rust, Mozilla and more!</description><item><title>Running rustfmt on Travis CI</title><link>http://johannh.me/blog/rustfmt-ci.html</link><description><![CDATA[<p><a href="https://github.com/rust-lang-nursery/rustfmt">rustfmt</a> just added a small feature that will hopefully have great impact on the way people use it in the future.</p>
]]></description><guid>http://johannh.me/blog/rustfmt-ci.html</guid><pubDate>Wed, 24 Aug 2016 20:00:00 +0100</pubDate></item><item><title>A better WebExtension debug console</title><link>http://johannh.me/blog/webextensions-debug-console.html</link><description><![CDATA[<p>I'm happy to announce we landed <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1005193">Bug 1005193</a> just in time for the new Firefox 48 release. In short, this gives you the ability to interact with the background script of a WebExtension through the add-on debugging console. I made a GIF to show it off:</p>
]]></description><guid>http://johannh.me/blog/webextensions-debug-console.html</guid><pubDate>Tue, 26 Apr 2016 15:26:00 +0100</pubDate></item><item><title>jpm as a Node module</title><link>http://johannh.me/blog/jpm-api.html</link><description><![CDATA[<p>Despite my personal involvement in <a href="https://github.com/mozilla-jetpack/jpm">jpm</a> we've used <a href="https://developer.mozilla.org/en-US/Add-ons/SDK/Tools/cfx">cfx</a> at <a href="https://zenmate.com">ZenMate</a> for building
our Addon-SDK based Firefox extensions until it finally <a href="https://blog.mozilla.org/addons/2015/10/14/breaking-changes-let-const-firefox-nightly-44/">became obsolete</a>.
With cfx-based Addons now being more or less automatically rejected from <a href="https://addons.mozilla.org">addons.mozilla.org</a>, we made the transition to jpm.</p>
]]></description><guid>http://johannh.me/blog/jpm-api.html</guid><pubDate>Thu, 11 Feb 2016 15:26:00 +0100</pubDate></item><item><title>Using rustfmt in Vim</title><link>http://johannh.me/blog/rustfmt-vim.html</link><description><![CDATA[<p><a href="https://github.com/nrc/rustfmt">rustfmt</a> just added support for receiving code on stdin. This means that you can now pipe things into <code>rustfmt</code> on stdin and receive a plain formatted version of your input on stdout, the UNIX way.</p>
]]></description><guid>http://johannh.me/blog/rustfmt-vim.html</guid><pubDate>Tue, 03 Nov 2015 23:00:00 +0100</pubDate></item></channel></rss>
